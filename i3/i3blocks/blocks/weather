#!/bin/bash
# Based on http://openweathermap.org/current

function parse {
  VALUE=`node -pe "JSON.parse(process.argv[1]).${2}" "${1}"`
  echo $VALUE ;
}

. $DOTS/i3/scripts/set-label

# Get API key from cfg file
. $HOME/.config/i3/i3blocks/blocks/weather.cfg
api_key="${OPENWEATHER_API_KEY}"

# Check on http://openweathermap.org/find
city_id="${BLOCK_INSTANCE}"

urgent_low=0
urgent_high=30

icon_sun=""
icon_cloud=""
icon_rain=""
icon_storm=""
icon_snow=""
icon_fog=""
icon_night=""

celsius="℃"
icon_base=$DOTS/dunst/icons/weather-

weather_url="http://api.openweathermap.org/data/2.5/weather?id=${city_id}&appid=${api_key}&units=metric"

data=$(wget -qO- "${weather_url}")
weather_main=`parse "${data}" weather[0].main`
description=`parse "${data}" weather[0].description`
weather_code=`parse "${data}" weather[0].id`
temp=`parse "${data}" main.temp`
clouds=`parse "${data}" clouds.all`
weather_icon=`parse "${data}" weather[0].icon`
humidity=`parse "${data}" main.humidity`
pressure=`parse "${data}" main.pressure`
city=`parse "${data}" name`
windms=`parse "${data}" wind.speed`
wind=$(echo "scale=1; $windms*3.6" | bc )
sunrise=`parse "${data}" sys.sunrise`
sunset=`parse "${data}" sys.sunset`

case ${weather_code} in
  6*) # snow
    icon=${icon_snow} 
    color_icon=${icon_base}snow.png ;; 
  3*|5*) # rain, drizzle
    icon=${icon_rain} 
    color_icon=${icon_base}rain.png ;; 
  800*) # clear
    case ${weather_icon} in
      01n)  icon=${icon_night} ;; # night
      *)    icon=${icon_sun} ;; # day
    esac 
    color_icon=${icon_base}clear.png ;; 
  80*) # cloudy
    icon=${icon_cloud} 
    color_icon=${icon_base}cloud.png ;; 
  7*) # fog
    icon=${icon_fog} 
    color_icon=${icon_base}cloud.png ;; 
  2*) # storm
    icon=${icon_storm} 
    color_icon=${icon_base}rain.png ;; 
  9*) # extreme
    icon=${weather_main} 
    color_icon=${icon_base}alert.png ;; 
  *) # probably no internet
    icon="?" 
    color_icon=${icon_base}alert.png 
esac

set-label "${icon} ${temp}${celsius}" i3.block.fgrnd

case $BLOCK_BUTTON in
  1) notify-send "$weather_main" \
"Description: $description in $city
Temperature: $temp$celsius
Clouds: $clouds%
Humidity: $humidity%
Pressure: ${pressure}hPa
Wind: ${wind}km/h
Sunrise: $(date '+%H:%M' --date=@${sunrise})
Sunset: $(date '+%H:%M' --date=@${sunset})" \
-i $color_icon
esac

if [[ "${temp}" -lt "${urgent_low}" ]] || [[ "${temp}" -gt "${urgent_high}" ]]; then
  exit 33
fi
